{"remainingRequest":"/Users/lolxd/humbleshit-dashboard/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/lolxd/humbleshit-dashboard/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lolxd/humbleshit-dashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lolxd/humbleshit-dashboard/src/views/Home.vue?vue&type=template&id=fae5bece&scoped=true&","dependencies":[{"path":"/Users/lolxd/humbleshit-dashboard/src/views/Home.vue","mtime":1588525704805},{"path":"/Users/lolxd/humbleshit-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lolxd/humbleshit-dashboard/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/lolxd/humbleshit-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lolxd/humbleshit-dashboard/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}